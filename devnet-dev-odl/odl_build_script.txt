    # Create directories for ODL build for the cisco-devnet user
    # and make read-write so that the build can be run as the vagrant user
    mkdir -p /home/cisco-devnet/git/odl-lithium
   
    # Anonymous git clone for all ODL projects, based on 
    # https://wiki.opendaylight.org/view/GettingStarted:Pulling,_Hacking,_and_Pushing_All_the_Code_from_the_CLI
    # Repeat this twice as falures are common.
    cd /home/cisco-devnet/git/odl-lithium
    for PROJECT in aaa affinity bgpcep controller defense4all dlux docs groupbasedpolicy integration l2switch lispflowmapping odlparent opendove openflowjava openflowplugin opflex ovsdb packetcable releng/autorelease releng/builder reservation sdninterfaceapp sfc snbi snmp4sdn tcpmd5 toolkit ttp vtn yangtools; do git clone https://git.opendaylight.org/gerrit/${PROJECT}.git ${PROJECT}; done
     for PROJECT in aaa affinity bgpcep controller defense4all dlux docs groupbasedpolicy integration l2switch lispflowmapping odlparent opendove openflowjava openflowplugin opflex ovsdb packetcable releng/autorelease releng/builder reservation sdninterfaceapp sfc snbi snmp4sdn tcpmd5 toolkit ttp vtn yangtools; do git clone https://git.opendaylight.org/gerrit/${PROJECT}.git ${PROJECT}; done

    # Git checkout stable branch for lithium (this does not work as the branch appear not to exist)
    for PROJECT in aaa affinity bgpcep controller defense4all dlux docs groupbasedpolicy integration l2switch lispflowmapping odlparent opendove openflowjava openflowplugin opflex ovsdb packetcable releng/autorelease releng/builder reservation sdninterfaceapp sfc snbi snmp4sdn tcpmd5 toolkit ttp vtn yangtools; do cd ${PROJECT}; git checkout stable/lithium; cd ..; done

    # Update Maven settings
    mkdir -p  /home/cisco-devnet/.m2
    cd /home/cisco-devnet/.m2
    wget -q -O - https://raw.githubusercontent.com/opendaylight/odlparent/master/settings.xml > settings.xml

    # Run Maven build and create Eclipse project files. There does not appear to be a way to do this for IntelliJ.
    # As of March 26 2015, ovsdb does not build, so skipping all OpenFlow components for now
    # for PROJECT in affinity bgpcep controller lispflowmapping openflowjava openflowplugin ovsdb/commons/parent vtn yangtools
    cd /home/cisco-devnet/git/odl-lithium
    for PROJECT in affinity bgpcep controller lispflowmapping vtn yangtools; do cd ${PROJECT}; mvn -fn clean eclipse:eclipse install; cd ..; done

    # Import projects to Eclipse workspace (it would be nice if this did work, but it does not. TBD)
    # mkdir -p /home/cisco-devnet/workspace
    # /usr/local/eclipse-jee/eclipse -nosplash -data /home/cisco-devnet/workspace -application org.eclipse.cdt.managedbuilder.core.headlessbuild -importAll /home/cisco-devnet/git/odl-lithium

    # Clone the integration branch
    cd /home/cisco-devnet/git/odl-lithium
    git clone https://git.opendaylight.org/gerrit/p/integration.git
    cd integration
    mvn -fn clean install -D skipTests

    # Git clone the COSC Learning Labs
    cd /home/cisco-devnet/git
    git clone http://gerrit-open1.cisco.com/gerrit/p/cosc-learning-labs

    # Git clone the ODL core tutorials
    cd /home/cisco-devnet/git
    git clone https://git.opendaylight.org/gerrit/p/coretutorials.git
    
    # Build core tutorials
    cd /home/cisco-devnet/git/coretutorials
    mvn -fn clean eclipse:eclipse install

    # Go into each chapter and build each one seperately

    # Clean up projects to save space
    cd /home/cisco-devnet/git/odl-lithium
    for PROJECT in affinity bgpcep controller lispflowmapping vtn yangtools; do cd ${PROJECT}; mvn -fn clean; cd ..; done
    cd /home/cisco-devnet/git/coretutorials
    mvn -fn clean
    cd /home/cisco-devnet/git/odl-lithium/integration
    mvn -fn clean
